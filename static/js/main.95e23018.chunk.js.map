{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movies.js","api/Api.ts","components/FindMovie/FindMovie.tsx","index.tsx","App.tsx"],"names":["MovieCard","props","Title","Plot","Poster","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbID","data","hollowFilm","getFilm","filmTitle","a","targetUrl","fetch","response","json","Response","Error","FindMovie","useState","setMovie","input","setInput","errorMessage","setErrorMessage","htmlFor","type","id","placeholder","onChange","event","target","value","onClick","then","result","catch","isFilmInList","undefined","find","item","addMovie","ReactDOM","render","setMovies","newMovie","document","getElementById"],"mappings":"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","file":"static/js/main.95e23018.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const {\n    Title,\n    Plot = '',\n    Poster,\n    imdbUrl,\n  } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {Plot}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable @typescript-eslint/quotes */\n/* eslint-disable quote-props */\nexport const data = [\n  {\n    \"Title\": \"Inception\",\n    \"Plot\": \"Follows the lives of eight very different couples in dealing with their love lives in various loosely interrelated tales all set during a frantic month before Christmas in London, England.\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n    \"imdbUrl\": \"https://www.imdb.com/title/tt1375666\",\n    \"imdbID\": \"tt1375666\",\n  },\n  {\n    \"Title\": \"Love Actually\",\n    \"Plot\": \"A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTY4NjQ5NDc0Nl5BMl5BanBnXkFtZTYwNjk5NDM3._V1_.jpg\",\n    \"imdbUrl\": \"https://www.imdb.com/title/tt0314331\",\n    \"imdbID\": \"tt0314331\",\n  },\n  {\n    \"Title\": \"The Day After Tomorrow\",\n    \"Plot\": \"Jack Hall, paleoclimatologist, must make a daring trek from Washington, D.C. to New York City to reach his son, trapped in the cross-hairs of a sudden international storm which plunges the planet into a new Ice Age.\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTY4YWMzMTMtZjUyOS00OGY1LTljMGUtOWU5ZjYzMjc2ZTMwXkEyXkFqcGdeQXVyMTYzMDM0NTU@._V1_SY1000_CR0,0,701,1000_AL_.jpg\",\n    \"imdbUrl\": \"https://www.imdb.com/title/tt0319262\",\n    \"imdbID\": \"tt0319262\",\n  },\n  {\n    \"Title\": \"Rogue One\",\n    \"Plot\": \"The daughter of an Imperial scientist joins the Rebel Alliance in a risky move to steal the Death Star plans.\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjEwMzMxODIzOV5BMl5BanBnXkFtZTgwNzg3OTAzMDI@._V1_SY1000_SX675_AL_.jpg\",\n    \"imdbUrl\": \"https://www.imdb.com/title/tt3748528\",\n    \"imdbID\": \"tt3748528\",\n  },\n  {\n    \"Title\": \"The Holiday\",\n    \"Plot\": \"Two women troubled with guy-problems swap homes in each other's countries, where they each meet a local guy and fall in love.\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTI1MDk4MzA2OF5BMl5BanBnXkFtZTYwMjQ3NDc3._V1_.jpg\",\n    \"imdbUrl\": \"https://www.imdb.com/title/tt0457939\",\n    \"imdbID\": \"tt0457939\",\n  },\n];\n\nexport const hollowFilm = {\n  \"Title\": \"Film name example\",\n  \"Plot\": \"\",\n  \"Poster\": \"https://i.pinimg.com/originals/f5/05/24/f50524ee5f161f437400aaf215c9e12f.jpg\",\n  \"imdbUrl\": \"\",\n  \"imdbID\": \"null\",\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=a91b1362&t=';\n\nexport const getFilm = async (filmTitle: string): Promise<Movie> => {\n  const targetUrl = BASE_URL + filmTitle;\n  const response = await fetch(targetUrl);\n\n  const data = await response.json();\n\n  if (data.Response === 'False') {\n    throw new Error('Don\\'t find that film');\n  }\n\n  return data;\n};\n","import React, { FC, useState, ChangeEvent } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { hollowFilm } from '../../api/movies';\nimport { getFilm } from '../../api/Api';\n\ninterface Props {\n  addMovie: (newMovie: Movie) => void;\n  movies: Movie[];\n}\n\nexport const FindMovie: FC<Props> = (props) => {\n  const [movie, setMovie] = useState<Movie>(hollowFilm);\n  const [input, setInput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setInput(event.target.value);\n    setErrorMessage('');\n  };\n\n  const findFilm = () => {\n    const response = getFilm(input);\n\n    response\n      .then(result => setMovie(result))\n      .catch(() => setErrorMessage('Can\\'t find a movie with such a title'));\n  };\n\n  const handleAddFilm = () => {\n    const isFilmInList = props.movies.find(item => item.imdbID === movie.imdbID) !== undefined;\n\n    if (movie !== hollowFilm && !isFilmInList) {\n      props.addMovie(movie);\n      setMovie(hollowFilm);\n      setInput('');\n    } else if (isFilmInList) {\n      setErrorMessage('This film is already in list');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={errorMessage ? 'input is-danger' : 'input'}\n              onChange={handleInputChange}\n              value={input}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddFilm}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...movie} />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { data } from './api/movies';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}